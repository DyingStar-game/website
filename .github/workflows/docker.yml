name: Docker Build & Push

# This workflow is called by the main CI/CD pipeline
# Can also be manually triggered for testing via workflow_dispatch

on:
  workflow_call:
    inputs:
      artifact-name:
        description: "Name of the build artifact to use"
        required: true
        type: string
      should-push:
        description: "Whether to push the image to registry"
        required: false
        type: boolean
        default: false
  workflow_dispatch:
    inputs:
      should-push:
        description: "Push image to registry"
        required: false
        type: boolean
        default: true

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: true

jobs:
  docker-build:
    name: Build production Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      image-digest: ${{ steps.build.outputs.digest }}

    steps:
      - name: Checkout (minimal)
        uses: actions/checkout@v4

      - name: Download runtime artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}
          path: artifact
      
      - name: Extract runtime artifact (restore symlinks)
        run: |
          set -euo pipefail
          tar -xzf artifact/runtime.tar.gz
          # Quick sanity check: list symlinks inside node_modules (expect pnpm structure)
          find .next/standalone/node_modules -maxdepth 1 -type l -printf '%f -> %l\n' | head -20 || true
          ls -1 .next/standalone/node_modules/.pnpm | head -20 || true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile.prod
          push: false
          tags: dyingstar-website:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/dyingstar-website.tar

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image-${{ github.sha }}
          path: /tmp/dyingstar-website.tar
          retention-days: 1

  docker-push:
    name: Push Docker image to registry
    runs-on: ubuntu-latest
    needs: [docker-build]
    # Push only when explicitly requested via should-push input (controlled by main CI/CD pipeline)
    if: ${{ inputs.should-push }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout (minimal)
        uses: actions/checkout@v4

      - name: Download runtime artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}
          path: artifact

      - name: Extract runtime artifact (restore symlinks)
        run: |
          set -euo pipefail
          tar -xzf artifact/runtime.tar.gz
          # Quick sanity check: list symlinks inside node_modules (expect pnpm structure)
          find .next/standalone/node_modules -maxdepth 1 -type l -printf '%f -> %l\n' | head -20 || true
          ls -1 .next/standalone/node_modules/.pnpm | head -20 || true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/dyingstar-website
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Validate commit is on main or develop branch (for tag events)
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          set -euo pipefail
          echo "Tag run: validating commit is on main or develop"
          git fetch origin main develop --depth=1
          if git merge-base --is-ancestor $GITHUB_SHA origin/main || git merge-base --is-ancestor $GITHUB_SHA origin/develop; then
            echo "Commit is on main or develop. Proceeding with push."
          else
            echo "Commit not on main or develop. Skipping registry push." >&2
            exit 1
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile.prod
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max