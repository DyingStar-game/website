name: Build & Image Next.js

on:
  push:
    branches: [ main, develop, feature/add-docker-stack ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build standalone artifact
    runs-on: ubuntu-latest
    container:
      image: node:22-alpine
      options: >-
        --cpus=2
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Print Node & npm versions
        run: |
          node -v
          npm -v

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-

      - name: Install dependencies (npm ci)
        run: npm ci --no-audit --no-fund

      - name: Lint
        run: npm run lint

      - name: Build
        env:
          NODE_OPTIONS: --max-old-space-size=4096
        run: npm run build

      - name: Upload standalone artifact
        if: success()
        continue-on-error: true # Permet à `act` de ne pas faire échouer le job si token runtime manquant
        uses: actions/upload-artifact@v4
        with:
          name: next-standalone
          path: |
            .next/standalone
            .next/static
            public
          retention-days: 7
          if-no-files-found: warn

      - name: Show artifact size
        run: du -sh .next/standalone || true

  docker-image:
    name: Build production Docker image
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
    env:
      IMAGE_NAME: dyingstar-website
      REGISTRY: ghcr.io/${{ github.repository_owner }}
      TAG: ${{ github.sha }}
    if: ${{ needs.build.result == 'success' }}
    steps:
      - name: Checkout (minimal)
        uses: actions/checkout@v4

      - name: Download standalone artifact
        uses: actions/download-artifact@v4
        with:
          name: next-standalone
          path: artifact

      - name: Tree artifact
        run: |
          ls -R artifact | head -100
      - name: Prepare build context
        run: |
          # Reconstituer l'arbo attendue par docker/Dockerfile.prod
          mkdir -p .next/standalone .next/static
          cp -a artifact/.next/standalone/* .next/standalone/
          cp -a artifact/.next/static .next/
          cp -a artifact/public ./public
          ls -1 .next | head -20

      - name: Build image (docker/Dockerfile.prod)
        run: docker build -f docker/Dockerfile.prod -t $IMAGE_NAME:$TAG .

      - name: Show image size
        run: docker images | grep $IMAGE_NAME | head -1